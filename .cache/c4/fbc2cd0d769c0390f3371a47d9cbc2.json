{"id":"ZqYc","dependencies":[{"name":"/Users/dominic_kendrick/code/muse-git-review/node_modules/rxjs/_esm5/internal/scheduler/asap.js.map","includedInParent":true,"mtime":1574677530610},{"name":"/Users/dominic_kendrick/code/muse-git-review/node_modules/rxjs/src/internal/scheduler/asap.ts","includedInParent":true,"mtime":1574677530610},{"name":"/Users/dominic_kendrick/code/muse-git-review/package.json","includedInParent":true,"mtime":1574677727706},{"name":"/Users/dominic_kendrick/code/muse-git-review/node_modules/rxjs/package.json","includedInParent":true,"mtime":1574677530610},{"name":"./AsapAction","loc":{"line":2,"column":27},"parent":"/Users/dominic_kendrick/code/muse-git-review/node_modules/rxjs/_esm5/internal/scheduler/asap.js","resolved":"/Users/dominic_kendrick/code/muse-git-review/node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js"},{"name":"./AsapScheduler","loc":{"line":3,"column":30},"parent":"/Users/dominic_kendrick/code/muse-git-review/node_modules/rxjs/_esm5/internal/scheduler/asap.js","resolved":"/Users/dominic_kendrick/code/muse-git-review/node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.asap=void 0;var e=require(\"./AsapAction\"),r=require(\"./AsapScheduler\"),s=new r.AsapScheduler(e.AsapAction);exports.asap=s;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":1,"column":128}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":147}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":149}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":153}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":155}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":169}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":171}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":183}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":191}},{"source":"../../../src/internal/scheduler/asap.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":196}}],"sources":{"../../../src/internal/scheduler/asap.ts":"import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n * @static true\n * @name asap\n * @owner Scheduler\n */\n\nexport const asap = new AsapScheduler(AsapAction);\n"},"lineCount":null}},"error":null,"hash":"21af1e32b9da6ad25935a128a62f2a87","cacheData":{"env":{}}}